{"mappings":"AASA,MAAMA,KAAO,CACXC,SAAUC,SAASC,cAAc,2BACjCC,UAAWF,SAASC,cAAc,4BAClCE,SAAUH,SAASC,cAAc,2BACjCG,SAAUJ,SAASC,cAAc,4BAInC,MAAMI,eAMFC,QACAC,aAAY,KACV,MAAMC,EAAcC,KAAKC,MACnBC,EAAYC,KAAKC,WAAaL,EACpCI,KAAKE,cAAcH,EAAA,GAClB,IACL,CAEAG,cAAcC,GACZ,MAAMC,EAAOC,KAAKC,MAAMH,EAAQ,OAC1BI,EAAQF,KAAKC,MAAMH,EAAS,MAAyB,MACrDK,EAAOH,KAAKC,MAAMH,EAAS,KAAoB,KAC/CM,EAAOJ,KAAKC,MAAMH,EAAS,IAAc,KAI/CjB,KAAKC,SAASuB,YAAc,GAAGN,IAC/BlB,KAAKI,UAAUoB,YAAc,GAAGH,IAChCrB,KAAKK,SAASmB,YAAc,GAAGF,IAC/BtB,KAAKM,SAASkB,YAAc,GAAGD,GACjC,CAzBAE,aAAYC,SAACA,EAAQX,WAAEA,IACrBD,KAAKY,SAAWA,EAChBZ,KAAKC,WAAaA,CACpB,EA0BF,MAAMY,MAAQ,IAAIpB,eAAe,CAC/BmB,SAAU,WACVX,WAAY,IAAIJ,KAAK,kBAEvBgB,MAAMnB","sources":["src/js/03-timer.js"],"sourcesContent":["/*Таймер обратного отсчета\nСоздай плагин настраиваемого таймера, который ведет обратный\n отсчет до предварительно определенной даты. \n Такой плагин может использоваться в блогах и интернет-магазинах, \n страницах регистрации событий, во время технического обслуживания и т. д.\n \n Плагин ожидает следующую HTML-разметку и показывает четыре цифры: \n дни, часы, минуты и секунды в формате XX:XX:XX:XX. \n Количество дней может состоять из более чем двух цифр.*/\nconst refs = {\n  daysRefs: document.querySelector('span[data-value=\"days\"]'),\n  hoursRefs: document.querySelector('span[data-value=\"hours\"]'),\n  minsRefs: document.querySelector('span[data-value=\"mins\"]'),\n  secsRefs: document.querySelector('span[data-value=\"secs\"]'),\n}\n\n //Плагин это класс CountdownTimer, экземпляр которого создает новый таймер с настройками.\nclass CountdownTimer {\n  constructor({selector, targetDate}) {\n    this.selector = selector\n    this.targetDate = targetDate\n  }\n\n    start() {\n    setInterval(() => {\n      const currentDate = Date.now()\n      const deltaTime = this.targetDate - currentDate;\n      this.updateCounter(deltaTime)\n    }, 1000)\n  }\n\n  updateCounter(time) {\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)); \n    const secs = Math.floor((time % (1000 * 60)) / 1000);\n\n    // console.log(`${days}: ${hours}: ${mins}: ${secs}`)\n\n    refs.daysRefs.textContent = `${days}`\n    refs.hoursRefs.textContent = `${hours}`\n    refs.minsRefs.textContent = `${mins}`\n    refs.secsRefs.textContent = `${secs}`\n  }\n} \n\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Apr 01, 2023'),\n });\ntimer.start()\n"],"names":["refs","daysRefs","document","querySelector","hoursRefs","minsRefs","secsRefs","CountdownTimer","start","setInterval","currentDate","Date","now","deltaTime","this","targetDate","updateCounter","time","days","Math","floor","hours","mins","secs","textContent","constructor","selector","timer"],"version":3,"file":"03-timer.2ab3fd1e.js.map"}