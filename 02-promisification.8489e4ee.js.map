{"mappings":"AAIA,MAAMA,MAAQC,GACH,IAAIC,SAASC,IAChBC,YAAW,KACTD,EAAQF,EAAA,GACTA,EAAA,IAIHI,QAAUC,GAAQC,QAAQC,IAAI,kBAAkBF,OAGtDN,MAAM,KAAMS,KAAKJ,SACjBL,MAAM,KAAMS,KAAKJ,SACjBL,MAAM,MAAMS,KAAKJ,SAQjB,MAAMK,MAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,gBAAkB,CAACC,EAAUC,EAAUC,KAK3CA,EAJqBF,EAASG,KAAIC,GAChCA,EAAKP,OAASI,EAAW,IAAKG,EAAMN,QAASM,EAAKN,QAAWM,IAGtD,EAGLC,OAASC,GAAgBb,QAAQc,MAAMD,GAK7CP,gBAAgBH,MAAO,QAASS,QAChCN,gBAAgBH,MAAO,MAAOS,QAK9BN,gBAAgBH,MAAO,SAASD,KAAKU,QACrCN,gBAAgBH,MAAO,OAAOD,KAAKU","sources":["src/js/02-promisification.js"],"sourcesContent":["/*Напиши функцию delay(ms), которая возвращает промис, переходящий в состояние \"resolved\" \nчерез ms миллисекунд. Значением исполнившегося промиса должно быть то кол-во миллисекунд \nкоторое передали во время вызова функции delay. */\n\nconst delay = ms => {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n          resolve(ms)\n      }, ms)\n  })\n};\n\nconst logger1 = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger1); // Resolved after 2000ms\ndelay(1000).then(logger1); // Resolved after 1000ms\ndelay(1500).then(logger1); // Resolved after 1500ms\n\n\n/*Задание 2\nПерепиши функцию toggleUserState() так, чтобы она не использовала \ncallback-функцию callback, а принимала всего два параметра allUsers \nи userName и возвращала промис. */\n\nconst users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName, callback) => {\n  const updatedUsers = allUsers.map(user =>\n    user.name === userName ? { ...user, active: !user.active } : user,\n  );\n\n  callback(updatedUsers);\n};\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\n/*\n * Сейчас работает так\n */\ntoggleUserState(users, 'Mango', logger);\ntoggleUserState(users, 'Lux', logger);\n\n/*\n * Должно работать так\n */\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);"],"names":["delay","ms","Promise","resolve","setTimeout","logger1","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","callback","map","user","logger","updatedUsers","table"],"version":3,"file":"02-promisification.8489e4ee.js.map"}